# Spam Email Detection using Naive Bayes Classifier

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score
import seaborn as sns
import matplotlib.pyplot as plt

# Show plots inline
%matplotlib inline

# Load your dataset (make sure 'spam.csv' is in the same directory)
df = pd.read_csv('spam.csv')  # CSV should have columns: label,message

# Preview
df.head()

# Encode labels (ham = 0, spam = 1)
df['label'] = df['label'].map({'ham': 0, 'spam': 1})

# Drop any rows with missing values (optional safety check)
df.dropna(inplace=True)

# Preview
df.head()

X_train, X_test, y_train, y_test = train_test_split(
    df['message'], df['label'], test_size=0.2, random_state=42
)


vectorizer = TfidfVectorizer(stop_words='english', max_df=0.7)
X_train_tf = vectorizer.fit_transform(X_train)
X_test_tf = vectorizer.transform(X_test)

model = MultinomialNB()
model.fit(X_train_tf, y_train)
model = MultinomialNB(alpha=0.1, fit_prior=True)

y_pred = model.predict(X_test_tf)

print("\nClassification Report:\n", classification_report(y_test, y_pred))
print("Accuracy:", accuracy_score(y_test, y_pred))
